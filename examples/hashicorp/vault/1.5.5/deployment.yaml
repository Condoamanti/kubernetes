---
# PersistentVolumeClaim Configuration
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-vault-data
  namespace: vault
  labels:
    type: nfs
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
# ConfigMap Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-server
  namespace: vault
  labels:
    app: vault-server
data:
  VAULT_DEV_LISTEN_ADDRESS: '0.0.0.0:8200'
  VAULT_LOCAL_CONFIG: '{"backend": {"file": {"path": "/vault/file"}}, "default_lease_ttl": "168h", "max_lease_ttl": "720h"}'
---
# Service Configuration
apiVersion: v1
kind: Service
metadata:
  name: vault-server
  namespace: vault
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 8200
    name: http
    protocol: TCP
    targetPort: 8200
    nodePort: 32385
  selector:
    app: vault-server
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
# Deployment Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-server
  namespace: vault
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault-server
  template:
    metadata:
      labels:
        app: vault-server
    spec:
      volumes:
      - name: vault-data
        persistentVolumeClaim:
          claimName: pvc-vault-data
      containers:
      - name: vault-server
        image: vault:1.5.5
        volumeMounts:
          - name: vault-data
            mountPath: /vault/file
        resources:
          requests:
            memory: "128Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "400m"
        envFrom:
          - configMapRef:
              name: vault-server
        ports:
        - containerPort: 8200
          name: http
        #securityContext:
        #  runAsUser: 0
---