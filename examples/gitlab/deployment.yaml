---
# PersistentVolumeClaim Configuration
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-gitlab-server-etc-gitlab
  namespace: gitlab-ce
  labels:
    type: nfs
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
# PersistentVolumeClaim Configuration
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-gitlab-server-var-opt-gitlab
  namespace: gitlab-ce
  labels:
    type: nfs
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
# PersistentVolumeClaim Configuration
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-gitlab-server-var-logs-gitlab
  namespace: gitlab-ce
  labels:
    type: nfs
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
---
# Service Configuration
apiVersion: v1
kind: Service
metadata:
  name: gitlab
  namespace: gitlab-ce
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 80
    name: http
    protocol: TCP
    targetPort: 80
    nodePort: 30200
  - port: 443
    name: https
    protocol: TCP
    targetPort: 443
    nodePort: 30201
  - port: 22
    name: ssh
    protocol: TCP
    targetPort: 22
    nodePort: 30202
  selector:
    app: gitlab-server
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
# Deployment Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-server
  namespace: gitlab-ce
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab-server
  template:
    metadata:
      labels:
        app: gitlab-server
    spec:
      serviceAccountName: gitlab
      volumes:
      - name: gitlab-server-etc-gitlab
        persistentVolumeClaim:
          claimName: pvc-gitlab-server-etc-gitlab
      - name: gitlab-server-var-opt-gitlab
        persistentVolumeClaim:
          claimName: pvc-gitlab-server-var-opt-gitlab
      - name: gitlab-server-var-logs-gitlab
        persistentVolumeClaim:
          claimName: pvc-gitlab-server-var-logs-gitlab
      containers:
      - name: gitlab-server
        image: gitlab/gitlab-ce:latest
        volumeMounts:
          - name: gitlab-server-etc-gitlab
            mountPath: /etc/gitlab
          - name: gitlab-server-var-opt-gitlab
            mountPath: /var/opt/gitlab
          - name: gitlab-server-var-logs-gitlab
            mountPath: /var/log/gitlab
        resources:
          limits:
            memory: "2Gi"
            cpu: 1000m
          requests:
            memory: "1Gi"
            cpu: 500m
        env:
        - name: GITLAB_OMNIBUS_CONFIG
          value: "external_url 'https://gitlab.jittersolutions.com'; gitlab_rails['packages_enabled'] = true"
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        - containerPort: 22
          name: ssh
        securityContext:
          runAsUser: 0
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab
  namespace: gitlab-ce
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gitlab
subjects:
  - kind: ServiceAccount
    name: gitlab
    namespace: gitlab-ce
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitlab
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gitlab
rules:
  - apiGroups: [""]
    resources: ["*"]
    verbs: ["*"]
---