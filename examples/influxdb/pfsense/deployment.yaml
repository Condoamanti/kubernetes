---
# PersistentVolumeClaim Configuration
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-influxdb-pfsense-var-lib-influxdb
  namespace: influxdb
  labels:
    type: nfs
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
# ConfigMap Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: influxdb-pfsense-server
  namespace: influxdb
  labels:
    app: influxdb-pfsense
data:
  INFLUXDB_REPORTING_DISABLED: true
  INFLUXDB_DATA_QUERY_LOG_ENABLED: false
  INFLUXDB_HTTP_AUTH_ENABLED: false
---
# Service Configuration
apiVersion: v1
kind: Service
metadata:
  name: influxdb-pfsense-server
  namespace: influxdb
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 8086
    name: http
    protocol: TCP
    targetPort: 8086
    nodePort: 30030
  selector:
    app: influxdb-pfsense
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
# Deployment Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb-pfsense-server
  namespace: influxdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influxdb-pfsense
  template:
    metadata:
      labels:
        app: influxdb-pfsense
    spec:
      volumes:
      - name: influxdb-pfsense-var-lib-influxdb
        persistentVolumeClaim:
          claimName: pvc-influxdb-pfsense-var-lib-influxdb
      containers:
      - name: influxdb-pfsense-server
        image: influxdb:latest
        volumeMounts:
          - name: influxdb-pfsense-var-lib-influxdb
            mountPath: /var/lib/influxdb
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "400m"
        envFrom:
          - configMapRef:
              name: influxdb-pfsense-server
        ports:
        - containerPort: 8086
          name: http
---