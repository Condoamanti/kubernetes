---
# PersistentVolumeClaim Configuration
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-proget-mssql-data
  namespace: proget
  labels:
    type: nfs
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
# ConfigMap Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: proget-mssql
  namespace: proget
  labels:
    app: proget-mssql
data:
  ACCEPT_EULA: ${ACCEPT_EULA}
  MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
  MSSQL_PID: ${MSSQL_PID}
---
# Deployment Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proget-mssql
  namespace: proget
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proget-mssql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: proget-mssql
    spec:
      volumes:
      - name: mssqldb
        persistentVolumeClaim:
          claimName: pvc-proget-mssql-data
      containers:
      - name: proget-mssql
        image: mcr.microsoft.com/mssql/server:2019-latest
        resources:
          requests:
            memory: "2048Mi"
            cpu: "1000m"
          limits:
            memory: "2048Mi"
            cpu: "1000m"
        env:
        - name: "ACCEPT_EULA"
          value: "Y"
        - name: "MSSQL_PID"
          value: "Express"
        - name: "DATABASE_NAME"
          value: "ProGet"
        - name: "MSSQL_SA_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: proget-mssql-sa-password
              key: password
        ports:
        - containerPort: 1433
---
# Service Configuration
apiVersion: v1
kind: Service
metadata:
  name: proget-mssql
  namespace: proget
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 1433
    protocol: TCP
    targetPort: 1433
    nodePort: 32300
  selector:
    app: proget-mssql
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---
# Secret Configuration
apiVersion: v1
kind: Secret
metadata:
  name: proget-mssql-sa-password
  namespace: proget
type: Opaque
stringData:
  password: "temp1234!@"
---
# PersistentVolumeClaim Configuration
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-proget-server-packages
  namespace: proget
  labels:
    type: nfs
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
# ConfigMap Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: proget-server
  namespace: proget
  labels:
    app: proget-server
data:
  SQL_CONNECTION_STRING: "Data Source=proget-mssql; Initial Catalog=${DATABASE_NAME}; User ID=sa; Password=${MSSQL_SA_PASSWORD}"
---
# Deployment Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proget-server
  namespace: proget
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proget-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: proget-server
    spec:
      volumes:
      - name: proget-server-packages
        persistentVolumeClaim:
          claimName: pvc-proget-server-packages
      containers:
      - name: proget-server
        image: inedo/proget:latest
        volumeMounts:
          - name: proget-server-packages
            mountPath: /var/proget/packages
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
        env:
        - name: "DATABASE_NAME"
          value: "ProGet"
        - name: "MSSQL_SA_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: proget-mssql-sa-password
              key: password
        ports:
        - containerPort: 80
---
# Service Configuration
apiVersion: v1
kind: Service
metadata:
  name: proget-server
  namespace: proget
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
    nodePort: 32380
  selector:
    app: proget-mssql
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---