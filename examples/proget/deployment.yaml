---
# PersistentVolumeClaim Configuration
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-proget-mssql-data
  namespace: proget
  labels:
    type: nfs
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
# ConfigMap Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: proget-mssql
  namespace: proget
  labels:
    app: proget-mssql
data:
  ACCEPT_EULA: "Y"
  MSSQL_SA_PASSWORD: "temp1234!@"
  MSSQL_PID: "Express"
---
# Deployment Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proget-mssql
  namespace: proget
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proget-mssql
  template:
    metadata:
      labels:
        app: proget-mssql
    spec:
      volumes:
      - name: mssqldb
        persistentVolumeClaim:
          claimName: pvc-proget-mssql-data
      containers:
      - name: proget-mssql
        image: mcr.microsoft.com/mssql/server:2019-latest
        volumeMounts:
          - name: mssqldb
            mountPath: /var/lib/postgresql/data
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        envFrom:
          - configMapRef:
              name: proget-mssql
        ports:
        - containerPort: 1433
---
# Service Configuration
apiVersion: v1
kind: Service
metadata:
  name: proget-mssql
  namespace: proget
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 1433
    protocol: TCP
    targetPort: 1433
    nodePort: 32300
  selector:
    app: proget-mssql
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---