---
# PersistentVolumeClaim Configuration
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-artifactory-nginx-data
  namespace: artifactory
  labels:
    type: nfs
  annotations:
    volume.beta.kubernetes.io/storage-class: standard
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 128Mi
---
# ConfigMap Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: artifactory-nginx-config
  namespace: artifactory
  labels:
    app: artifactory
data:
  artifactory-nginx.conf: |-
    ###########################################################
    ## this configuration was generated by JFrog Artifactory ##
    ###########################################################
  
    ## server configuration
    server {
    
    listen 30080 ;
    
    server_name k8snode1dc1.jittersolutions.com;
    if ($http_x_forwarded_proto = '') {
        set $http_x_forwarded_proto  $scheme;
    }
    ## Application specific logs
    ## access_log /var/log/nginx/artifactory-nginx.log timing;
    ## error_log /var/log/nginx/artifactory-nginx.log;
    rewrite ^/$ /ui/ redirect;
    rewrite ^/ui$ /ui/ redirect;
    chunked_transfer_encoding on;
    client_max_body_size 0;
    location / {
    proxy_read_timeout  2400s;
    proxy_pass_header   Server;
    proxy_cookie_path   ~*^/.* /;
    proxy_buffer_size 128k;
    proxy_buffers 40 128k;
    proxy_busy_buffers_size 128k;
    proxy_pass          http://artifactory:80;
    proxy_set_header    X-JFrog-Override-Base-Url $http_x_forwarded_proto://$host:$server_port;
    proxy_set_header    X-Forwarded-Port  $server_port;
    proxy_set_header    X-Forwarded-Proto $http_x_forwarded_proto;
    proxy_set_header    Host              $http_host;
    proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;

        location ~ ^/artifactory/ {
            proxy_pass    http://artifactory:80;
        }
      }
    }

---
# Deployment Configuration
apiVersion: apps/v1
kind: Deployment
metadata:
  name: artifactory-nginx
  namespace: artifactory
spec:
  replicas: 1
  selector:
    matchLabels:
      app: artifactory
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: artifactory
    spec:
      volumes:
      - name: artifactory-nginx-data
        persistentVolumeClaim:
          claimName: pvc-artifactory-nginx-data
      - name: artifactory-nginx-config
        configMap:
          defaultMode: 0644
          name: artifactory-nginx-config
      containers:
      - name: artifactory
        image: nginx:latest
        volumeMounts:
          - name: artifactory-nginx-config
            mountPath: /etc/nginx/conf.d/artifactory-nginx.conf
            readOnly: false
            subPath: artifactory-nginx.conf
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        securityContext:
          runAsUser: 0
          runAsGroup: 1000
---
# Service Configuration
apiVersion: v1
kind: Service
metadata:
  name: artifactory-nginx
  namespace: artifactory
spec:
  selector: 
    app: artifactory
  ports:
    - port: 80
      name: http
      targetPort: 80
      nodePort: 30080
    - port: 443
      name: https
      targetPort: 443
      nodePort: 30443
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}
---